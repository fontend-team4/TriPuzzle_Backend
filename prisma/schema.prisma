generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model bills {
  id          Int           @id @default(autoincrement())
  date        DateTime      @db.Date
  title       String        @db.VarChar(45)
  price       Decimal       @db.Decimal(10, 2)
  create_at   DateTime?     @default(now()) @db.Timestamp(0)
  category    String        @db.VarChar(45)
  users_bills users_bills[]
}

model categories {
  id                Int                 @id @default(autoincrement())
  name              String?             @db.VarChar(100)
  places_categories places_categories[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model favorites {
  id              Int    @id @default(autoincrement()) // 單一主鍵
  favorite_user   Int
  favorite_places String
  places          places @relation(fields: [favorite_places], references: [place_id])
  users           users  @relation(fields: [favorite_user], references: [id])

  @@unique([favorite_user, favorite_places]) // 唯一約束取代複合主鍵
}

model places {
  id                Int                 @id @default(autoincrement())
  place_id          String              @unique @db.VarChar(255)
  name              String              @db.VarChar(255)
  name_en           String?             @db.VarChar(255)
  summary           String?             @db.VarChar(255)
  image_url         String?             @db.VarChar(2048)
  country           String?             @default("Unknown") @db.VarChar(45)
  city              String?             @default("Unknown") @db.VarChar(45)
  address           String?             @default("Unknown") @db.VarChar(255)
  location          String?             @default("Unknown") @db.VarChar(255)
  phone             String?
  website           String?             @db.VarChar(225)
  rating            Decimal?            @default(0.0) @db.Decimal(2, 1)
  opening_hours     Json                @default("[]")
  photos            Json                @default("[]")
  photos_length     Int?                @default(0)
  geometry          Json                @default("[]")
  google_map_url    String?             @db.VarChar(511)
  web_map           String?             @db.VarChar(255)
  share_url         String?             @db.VarChar(255)
  share_code        Bytes?              @db.Blob
  search_code       String?             @db.VarChar(255)
  favorites         favorites[]
  places_categories places_categories[]
  schedule_places   schedule_places[]
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model places_categories {
  id          Int        @id @default(autoincrement())
  place_id    String
  category_id Int
  categories  categories @relation(fields: [category_id], references: [id])
  places      places     @relation(fields: [place_id], references: [place_id])

  @@unique([place_id, category_id]) // 唯一約束
}

model schedule_places {
  id                 Int               @id @default(autoincrement())
  place_id           String
  schedule_id        Int
  which_date         DateTime          @db.Date
  arrival_time       DateTime?         @default(dbgenerated("'08:00:00'")) @db.Time(0)
  stay_time          DateTime          @default(dbgenerated("'01:00:00'")) @db.Time(0)
  transportation_way TransportationWay @default(PUBLIC_TRANSPORT)
  order              String            @unique(map: "order_UNIQUE") @db.VarChar(45)
  places             places            @relation(fields: [place_id], references: [place_id], onUpdate: Restrict, map: "schedule_place_id") // 修改 references 為 place_id
  schedules          schedules         @relation(fields: [schedule_id], references: [id], onUpdate: Restrict, map: "schedule_schedule_id")

  @@index([place_id], map: "schedule_place_id_idx")
  @@index([schedule_id], map: "schedule_schedule_id_idx")
}

model schedules {
  id                 Int               @id @default(autoincrement())
  title              String            @db.VarChar(45)
  create_by          Int
  co_edit_url        String?           @db.VarChar(225)
  co_edit_qrcode     Bytes?            @db.Blob
  schedule_note      String?           @db.Text
  image_url          String?           @db.VarChar(255)
  start_date         DateTime          @db.Date
  end_date           DateTime          @db.Date
  transportation_way TransportationWay @default(PUBLIC_TRANSPORT)
  created_at         DateTime?         @default(now()) @db.Timestamp(0)
  schedule_places    schedule_places[]
  users_bills        users_bills[]
  users_images       users_images[]
  users_schedules    users_schedules[]
}

model users {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(45)
  email           String            @unique(map: "email_UNIQUE") @db.VarChar(45)
  password        String            @db.VarChar(255)
  profile_pic_url String?           @db.VarChar(255)
  phone           String?
  gender          users_gender?
  birthday        DateTime?         @db.Date
  description     String?           @db.VarChar(225)
  login_way       String?           @db.VarChar(45)
  create_at       DateTime?         @default(now()) @db.Timestamp(0)
  token           String?           @db.VarChar(511)
  token_time      DateTime          @default(now()) @updatedAt @db.Timestamp(0)
  favorites       favorites[]
  users_bills     users_bills[]
  users_images    users_images[]
  users_schedules users_schedules[]
}

model users_bills {
  id          Int       @id @default(autoincrement())
  schedule_id Int
  user_id     Int
  bill_id     Int
  pay_first   Boolean
  share       Boolean?
  bills       bills     @relation(fields: [bill_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bills_bill_id")
  schedules   schedules @relation(fields: [schedule_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "bills_schedule_id")
  users       users     @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "bills_user_id")

  @@index([bill_id], map: "fk_bill_id_idx")
  @@index([schedule_id], map: "fk_schedule_id_idx")
  @@index([user_id], map: "user_bill_id_idx")
}

model users_images {
  id                 Int       @id @default(autoincrement())
  users_id           Int
  schedule_id        Int
  schedule_image_url String    @db.VarChar(255)
  schedules          schedules @relation(fields: [schedule_id], references: [id], onUpdate: Restrict, map: "image_schedule")
  users              users     @relation(fields: [users_id], references: [id], onUpdate: Restrict, map: "image_user_id")

  @@index([schedule_id], map: "image_schedule_idx")
  @@index([users_id], map: "image_user_id_idx")
}

/// The underlying table does not contain a valid unique identifier and can therefore currently not be handled by Prisma Client.
model users_schedules {
  schedule_id Int
  user_id     Int
  access      Boolean   @default(true)
  schedules   schedules @relation(fields: [schedule_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "schedules_schedule_id")
  users       users     @relation(fields: [user_id], references: [id], onUpdate: Restrict, map: "schedules_user_id")

  @@id([schedule_id, user_id])
  @@index([schedule_id], map: "fk_schedules_id_idx")
  @@index([user_id], map: "fk_user_id_idx")
}

model tokenblacklist {
  id        Int      @id @default(autoincrement())
  token     String   @unique(map: "tokenBlacklist_token_key")
  createdAt DateTime @default(now())
}

enum TransportationWay {
  PUBLIC_TRANSPORT
  WALK
  CAR
  MOTORBIKE
  CUSTOM
}

enum users_gender {
  Male
  Female
  Other
}
